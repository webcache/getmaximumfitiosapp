name: Build and Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  EXPO_PUBLIC_FIREBASE_API_KEY: ${{ secrets.EXPO_PUBLIC_FIREBASE_API_KEY }}
  EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN }}
  EXPO_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.EXPO_PUBLIC_FIREBASE_DATABASE_URL }}
  EXPO_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.EXPO_PUBLIC_FIREBASE_PROJECT_ID }}
  EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET }}
  EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
  EXPO_PUBLIC_FIREBASE_APP_ID: ${{ secrets.EXPO_PUBLIC_FIREBASE_APP_ID }}
  EXPO_PUBLIC_GOOGLE_IOS_CLIENT_ID: ${{ secrets.EXPO_PUBLIC_GOOGLE_IOS_CLIENT_ID }}
  EXPO_PUBLIC_GOOGLE_WEB_CLIENT_ID: ${{ secrets.EXPO_PUBLIC_GOOGLE_WEB_CLIENT_ID }}
  EXPO_PUBLIC_API_BASE_URL: ${{ secrets.EXPO_PUBLIC_API_BASE_URL }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  EXPO_PUBLIC_OPENAI_API_KEY: ${{ secrets.EXPO_PUBLIC_OPENAI_API_KEY }}

jobs:
  # Job 1: Code Quality and Testing
  quality-check:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: 🧹 Clean package manager conflicts
        run: |
          # Remove yarn.lock to prevent package manager conflicts since we're using npm
          if [ -f "yarn.lock" ]; then
            echo "Removing yarn.lock to prevent conflicts with npm"
            rm yarn.lock
          fi

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 TypeScript check
        run: npx tsc --noEmit

      - name: ✅ Code quality check completed
        run: echo "✅ TypeScript check passed - code quality verified"

  # Job 2: Build for Development (Preview)
  build-preview:
    name: Build Preview
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/develop'
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: 🏗 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          packager: npm

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🚀 Create preview build
        run: eas build --platform all --profile preview --non-interactive --wait

  # Job 3: Build for Production (iOS)
  build-ios-production:
    name: Build iOS Production
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: 🏗 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          packager: npm

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🍎 Build iOS Production
        run: eas build --platform ios --profile production --non-interactive --wait

      - name: 🚀 Submit to App Store (if configured)
        run: |
          if eas submit --platform ios --latest --non-interactive; then
            echo "✅ iOS app submitted to App Store successfully"
          else
            echo "⚠️ iOS app submission failed or not configured"
          fi
        continue-on-error: true

  # Job 4: Build for Production (Android)
  build-android-production:
    name: Build Android Production
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: 🏗 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          packager: npm

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🤖 Build Android Production
        run: eas build --platform android --profile production --non-interactive --wait

      - name: 🚀 Submit to Google Play (if configured)
        run: |
          if eas submit --platform android --latest --non-interactive; then
            echo "✅ Android app submitted to Google Play successfully"
          else
            echo "⚠️ Android app submission failed or not configured"
          fi
        continue-on-error: true

  # Job 5: Deploy Web Version (if applicable)
  deploy-web:
    name: Deploy Web
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: 🏗 Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          packager: npm

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🌐 Export web build
        run: npx expo export -p web

      - name: 🚀 Deploy to GitHub Pages (optional)
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
        continue-on-error: true

  # Job 6: Update OTA (Over-The-Air updates)
  update-ota:
    name: Publish OTA Update
    runs-on: ubuntu-latest
    needs: [build-ios-production, build-android-production]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: 🏗 Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          packager: npm

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🚀 Publish OTA update
        run: eas update --auto --non-interactive

  # Job 7: Notify on completion
  notify:
    name: Notify Completion
    runs-on: ubuntu-latest
    needs: [build-ios-production, build-android-production, deploy-web, update-ota]
    if: always() && github.ref == 'refs/heads/main'
    steps:
      - name: 📢 Deployment Summary
        run: |
          echo "🎉 Deployment completed for GetMaximumFit app!"
          echo "📱 iOS Build: ${{ needs.build-ios-production.result }}"
          echo "🤖 Android Build: ${{ needs.build-android-production.result }}"
          echo "🌐 Web Deploy: ${{ needs.deploy-web.result }}"
          echo "📡 OTA Update: ${{ needs.update-ota.result }}"
