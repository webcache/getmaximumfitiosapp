name: iOS CI (Self-Hosted)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      lane:
        description: 'Fastlane lane to run'
        required: true
        default: 'beta'   # change if your lane name differs
        type: choice
        options: [beta, testflight, release]

env:
  # ------- Lane / Tool Versions -------
  NODE_VERSION: "20.19.2"
  RUBY_VERSION: "3.4.5"
  COCOAPODS_VERSION: "1.16.2"
  FASTLANE_LANE: ${{ github.event.inputs.lane || 'beta' }}

  # ------- Expo / App Env (public) -------
  EXPO_PUBLIC_API_BASE_URL: ${{ secrets.EXPO_PUBLIC_API_BASE_URL }}
  EXPO_PUBLIC_FIREBASE_API_KEY: ${{ secrets.EXPO_PUBLIC_FIREBASE_API_KEY }}
  EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN }}
  EXPO_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.EXPO_PUBLIC_FIREBASE_DATABASE_URL }}
  EXPO_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.EXPO_PUBLIC_FIREBASE_PROJECT_ID }}
  EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET }}
  EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
  EXPO_PUBLIC_FIREBASE_APP_ID: ${{ secrets.EXPO_PUBLIC_FIREBASE_APP_ID }}
  EXPO_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.EXPO_PUBLIC_FIREBASE_MEASUREMENT_ID }}
  EXPO_PUBLIC_GOOGLE_IOS_CLIENT_ID: ${{ secrets.EXPO_PUBLIC_GOOGLE_IOS_CLIENT_ID }}
  EXPO_PUBLIC_GOOGLE_WEB_CLIENT_ID: ${{ secrets.EXPO_PUBLIC_GOOGLE_WEB_CLIENT_ID }}
  EXPO_PUBLIC_OPENAI_API_KEY: ${{ secrets.EXPO_PUBLIC_OPENAI_API_KEY }}
  EXPO_PUBLIC_REVENUECAT_IOS_API_KEY: ${{ secrets.EXPO_PUBLIC_REVENUECAT_IOS_API_KEY }}

  # ------- Signing / App Store Connect -------
  APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
  APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
  APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
  # Path to the .p8 already present on the Mac mini
  ASC_KEY_PATH: ${{ secrets.ASC_KEY_PATH }}

  # ------- match (use HTTPS + Basic auth) -------
  MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
  MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
  MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

  # ------- Keychain for CI -------
  CI_KEYCHAIN_NAME: "build.keychain-db"
  CI_KEYCHAIN_PWD: ${{ secrets.CI_KEYCHAIN_PWD }}

  # ------- Misc -------
  IOS_GOOGLE_SERVICE_PLIST_B64: ${{ secrets.IOS_GOOGLE_SERVICE_PLIST_B64 }}

jobs:
  ios:
    name: Build & (optionally) Upload
    # Use your runner’s labels here (example labels shown)
    runs-on: [self-hosted, macOS]

    steps:
      # 1) Checkout full history & disable Actions credential helper
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0              # match sometimes needs tags/history
          persist-credentials: false  # avoid overriding git creds used by match

      # 2) Ensure repo path is “safe” (helps on some self-hosted setups)
      - name: Mark repo as safe directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      # 3) Node
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install JS deps
        run: |
          npm ci

      # 4) Ruby + Bundler (Fastlane, CocoaPods via Gemfile if present)
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Ensure CocoaPods version
        run: |
          gem list -i cocoapods -v "$COCOAPODS_VERSION" || sudo gem install cocoapods -v "$COCOAPODS_VERSION"
          pod --version

      # 5) Create a clean CI keychain
      - name: Create & unlock CI keychain
        shell: bash
        run: |
          security create-keychain -p "${CI_KEYCHAIN_PWD}" "${CI_KEYCHAIN_NAME}" || true
          security set-keychain-settings -lut 3600 "${CI_KEYCHAIN_NAME}"
          security default-keychain -s "${CI_KEYCHAIN_NAME}"
          security unlock-keychain -p "${CI_KEYCHAIN_PWD}" "${CI_KEYCHAIN_NAME}"
          security list-keychains -s "${CI_KEYCHAIN_NAME}" login.keychain-db

      # 6) Provide GoogleService-Info.plist to the iOS project
      - name: Write GoogleService-Info.plist
        if: env.IOS_GOOGLE_SERVICE_PLIST_B64 != ''
        run: |
          mkdir -p ios
          echo "$IOS_GOOGLE_SERVICE_PLIST_B64" | base64 --decode > ios/GoogleService-Info.plist

      # 7) Pod install (works for bare or prebuilt Expo)
      - name: Install iOS pods
        working-directory: ios
        run: |
          pod repo update
          pod install

      # 8) Run Fastlane (uses match + ASC API key)
      - name: Fastlane ${{ env.FASTLANE_LANE }}
        env:
          # Tell fastlane/match to use our CI keychain
          MATCH_KEYCHAIN_NAME: ${{ env.CI_KEYCHAIN_NAME }}
          MATCH_KEYCHAIN_PASSWORD: ${{ env.CI_KEYCHAIN_PWD }}
          # Fastlane App Store Connect API key details
          APP_STORE_CONNECT_API_KEY_PATH: ${{ env.ASC_KEY_PATH }}
          # Make sure git uses HTTPS + Basic auth for the match repo
          # (fastlane reads MATCH_GIT_BASIC_AUTHORIZATION directly)
        run: |
          bundle exec fastlane ios $FASTLANE_LANE --verbose

      # 9) Collect artifacts (adjust paths to match your lane output)
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-artifacts
          path: |
            ios/build/**/*.ipa
            fastlane/*.log
            ~/Library/Logs/gym/*.log
          if-no-files-found: ignore