rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Exercise collections - public read access for all users
    // TEMPORARY: Allow unauthenticated writes for migration
    match /exercises/{exerciseId} {
      allow read: if true; // Public read access for all exercises
      allow write: if true; // TEMPORARY: Allow unauthenticated writes for migration
    }
    
    // Exercise metadata - public read access
    // TEMPORARY: Allow unauthenticated writes for migration  
    match /exercise_metadata/{document} {
      allow read: if true; // Public read access for metadata
      allow write: if true; // TEMPORARY: Allow unauthenticated writes for migration
    }
    
    // Users can read and write their own profile data
    match /profiles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Users can read and write their own workouts
      match /workouts/{workoutId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Users can read and write their own favorite exercises
      match /favoriteExercises/{favoriteId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Users can read and write their own max lifts
      match /maxLifts/{maxLiftId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Users can read and write their own goals
      match /goals/{goalId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Users can read and write their own weight history
      match /weightHistory/{weightEntryId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Allow users to read and write their own data in the root collections
    // (for backward compatibility if any data is stored there)
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
